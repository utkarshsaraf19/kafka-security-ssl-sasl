---
version: '2'
services:
  zookeeper-1:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper-1
    container_name: zookeeper-1
    ports:
      - "22181:22181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 22181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka-cluster-network
      
  kafka-broker-1:
    # "`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-
    # An important note about accessing Kafka from clients on other machines: 
    # -----------------------------------------------------------------------
    #
    # The config used here exposes port 9092 for _external_ connections to the broker
    # i.e. those from _outside_ the docker network. This could be from the host machine
    # running docker, or maybe further afield if you've got a more complicated setup. 
    # If the latter is true, you will need to change the value 'localhost' in 
    # KAFKA_ADVERTISED_LISTENERS to one that is resolvable to the docker host from those 
    # remote clients
    #
    # For connections _internal_ to the docker network, such as from other services
    # and components, use kafka:29092.
    #
    # See https://rmoff.net/2018/08/02/kafka-listeners-explained/ for details
    # "`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-
    #
    image: confluentinc/cp-kafka:latest
    hostname: kafka-broker-1
    container_name: kafka-broker-1
    depends_on:
      - zookeeper-1
    ports:
      - 19093:19093
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:22181
      KAFKA_ADVERTISED_LISTENERS: SSL://kafka-broker-1:19093
      #KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      #KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.broker-1.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: broker-1_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: broker-1_sslkey_creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.broker-1.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: broker-1_truststore_creds
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ""
      KAFKA_SSL_CLIENT_AUTH: required
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SSL
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    volumes:
      - ${KAFKA_SSL_SECRETS_DIR}/broker-1:/etc/kafka/secrets
    networks:
      - kafka-cluster-network

  kafka-connect:
    image: kafka-connect
    build:
      context: .
    hostname: kafka-connect
    container_name: kafka-connect
    depends_on:
      - zookeeper-1
      - kafka-broker-1
    ports:
      - 8083:8083
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka-broker-1:19093
      CONNECT_GROUP_ID: 'kafka-connect'
      CONNECT_REST_ADVERTISED_HOST_NAME: 'kafka-connect'
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_CONFIG_STORAGE_TOPIC: 'connect-config-storage'
      CONNECT_OFFSET_STORAGE_TOPIC: 'connect-offset-storage'
      CONNECT_STATUS_STORAGE_TOPIC: 'connect-status-storage'
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter" 
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_PLUGIN_PATH: /etc/confluent/plugins
      CONNECT_SECURITY_PROTOCOL: 'SSL'
      CONNECT_SSL_KEY_PASSWORD: confluent
      CONNECT_SSL_KEYSTORE_LOCATION: '/etc/confluent/secrets/kafka.consumer.keystore.jks'
      CONNECT_SSL_KEYSTORE_PASSWORD: confluent
      CONNECT_SSL_TRUSTSTORE_LOCATION: '/etc/confluent/secrets/kafka.consumer.truststore.jks'
      CONNECT_SSL_TRUSTSTORE_PASSWORD: confluent
      CONNECT_KAFKASTORE_SECURITY_PROTOCOL: 'SSL'
      CONNECT_KAFKASTORE_SSL_KEY_PASSWORD: confluent
      CONNECT_KAFKASTORE_SSL_KEYSTORE_LOCATION: '/etc/confluent/secrets/kafka.consumer.keystore.jks'
      CONNECT_KAFKASTORE_SSL_KEYSTORE_PASSWORD: confluent
      CONNECT_KAFKASTORE_SSL_TRUSTSTORE_LOCATION: '/etc/confluent/secrets/kafka.consumer.truststore.jks'
      CONNECT_KAFKASTORE_SSL_TRUSTSTORE_PASSWORD: confluent
      CONNECT_PRODUCER_SECURITY_PROTOCOL: 'SSL'
      CONNECT_PRODUCER_SSL_KEY_PASSWORD: confluent
      CONNECT_PRODUCER_SSL_KEYSTORE_LOCATION: '/etc/confluent/secrets/kafka.consumer.keystore.jks'
      CONNECT_PRODUCER_SSL_KEYSTORE_PASSWORD: confluent
      CONNECT_PRODUCER_SSL_TRUSTSTORE_LOCATION: '/etc/confluent/secrets/kafka.consumer.truststore.jks'
      CONNECT_PRODUCER_SSL_TRUSTSTORE_PASSWORD: confluent
      CONNECT_CONSUMER_SECURITY_PROTOCOL: 'SSL'
      CONNECT_CONSUMER_SSL_KEY_PASSWORD: confluent
      CONNECT_CONSUMER_SSL_KEYSTORE_LOCATION: '/etc/confluent/secrets/kafka.consumer.keystore.jks'
      CONNECT_CONSUMER_SSL_KEYSTORE_PASSWORD: confluent
      CONNECT_CONSUMER_SSL_TRUSTSTORE_LOCATION: '/etc/confluent/secrets/kafka.consumer.truststore.jks'
      CONNECT_CONSUMER_SSL_TRUSTSTORE_PASSWORD: confluent
    volumes:
      - ${KAFKA_SSL_SECRETS_DIR}/connect:/etc/confluent/secrets
      - ${KAFKA_SSL_SECRETS_DIR}/connect/plugins:/etc/confluent/plugins
    networks:
      - kafka-cluster-network

networks:
  kafka-cluster-network:
    driver: bridge
    name: kafka-cluster-network
