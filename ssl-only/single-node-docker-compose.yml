---
version: '2'
services:
  zookeeper-1:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper-1
    container_name: zookeeper-1
    ports:
      - "22181:22181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 22181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka-cluster-network
      
  kafka-broker-1:
    image: confluentinc/cp-kafka:latest
    hostname: kafka-broker-1
    container_name: kafka-broker-1
    depends_on:
      - zookeeper-1
    ports:
      - 19093:19093
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:22181
      KAFKA_ADVERTISED_LISTENERS: SSL://kafka-broker-1:19093
      #KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      #KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.broker-1.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: broker-1_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: broker-1_sslkey_creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.broker-1.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: broker-1_truststore_creds
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ""
      KAFKA_SSL_CLIENT_AUTH: required
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SSL
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    volumes:
      - ${KAFKA_SSL_SECRETS_DIR}/broker-1:/etc/kafka/secrets
    networks:
      - kafka-cluster-network      

  kafka-connect:
    image: kafka-connect
    build:
      context: .
    hostname: kafka-connect
    container_name: kafka-connect
    depends_on:
      - zookeeper-1
      - kafka-broker-1
    ports:
      - 8083:8083
    environment:
      CONNECT_BOOTSTRAP_SERVERS: SSL://kafka-broker-1:19093
      CONNECT_GROUP_ID: 'kafka-connect'
      CONNECT_REST_ADVERTISED_HOST_NAME: 'kafka-connect'
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_CONFIG_STORAGE_TOPIC: 'connect-config-storage'
      CONNECT_OFFSET_STORAGE_TOPIC: 'connect-offset-storage'
      CONNECT_STATUS_STORAGE_TOPIC: 'connect-status-storage'
      CONNECT_KEY_CONVERTER: "io.confluent.connect.avro.AvroConverter" 
      CONNECT_VALUE_CONVERTER: "io.confluent.connect.avro.AvroConverter"
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_PLUGIN_PATH: /etc/kafka/secrets/plugins
      CONNECT_SECURITY_PROTOCOL: 'SSL'
      CONNECT_SSL_KEY_PASSWORD: confluent
      CONNECT_SSL_KEYSTORE_LOCATION: '/etc/kafka/secrets/kafka.consumer.keystore.jks'
      CONNECT_SSL_KEYSTORE_PASSWORD: confluent
      CONNECT_SSL_TRUSTSTORE_LOCATION: '/etc/kafka/secrets/kafka.consumer.truststore.jks'
      CONNECT_SSL_TRUSTSTORE_PASSWORD: confluent
      CONNECT_KAFKASTORE_SECURITY_PROTOCOL: 'SSL'
      CONNECT_KAFKASTORE_SSL_KEY_PASSWORD: confluent
      CONNECT_KAFKASTORE_SSL_KEYSTORE_LOCATION: '/etc/kafka/secrets/kafka.consumer.keystore.jks'
      CONNECT_KAFKASTORE_SSL_KEYSTORE_PASSWORD: confluent
      CONNECT_KAFKASTORE_SSL_TRUSTSTORE_LOCATION: '/etc/kafka/secrets/kafka.consumer.truststore.jks'
      CONNECT_KAFKASTORE_SSL_TRUSTSTORE_PASSWORD: confluent
      CONNECT_PRODUCER_SECURITY_PROTOCOL: 'SSL'
      CONNECT_PRODUCER_SSL_KEY_PASSWORD: confluent
      CONNECT_PRODUCER_SSL_KEYSTORE_LOCATION: '/etc/kafka/secrets/kafka.consumer.keystore.jks'
      CONNECT_PRODUCER_SSL_KEYSTORE_PASSWORD: confluent
      CONNECT_PRODUCER_SSL_TRUSTSTORE_LOCATION: '/etc/kafka/secrets/kafka.consumer.truststore.jks'
      CONNECT_PRODUCER_SSL_TRUSTSTORE_PASSWORD: confluent
      CONNECT_CONSUMER_SECURITY_PROTOCOL: 'SSL'
      CONNECT_CONSUMER_SSL_KEY_PASSWORD: confluent
      CONNECT_CONSUMER_SSL_KEYSTORE_LOCATION: '/etc/kafka/secrets/kafka.consumer.keystore.jks'
      CONNECT_CONSUMER_SSL_KEYSTORE_PASSWORD: confluent
      CONNECT_CONSUMER_SSL_TRUSTSTORE_LOCATION: '/etc/kafka/secrets/kafka.consumer.truststore.jks'
      CONNECT_CONSUMER_SSL_TRUSTSTORE_PASSWORD: confluent
    volumes:
      - ${KAFKA_SSL_SECRETS_DIR}/connects:/etc/kafka/secrets
    networks:
      - kafka-cluster-network

  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    hostname: schema-registry
    container_name: schema-registry
    ports:
      - 8081:8081/tcp
    depends_on:
      - zookeeper-1
      - kafka-broker-1
    environment:
      #   ZooKeeper URL for the Apache KafkaÂ® cluster
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper-1:22181
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: SSL://kafka-broker-1:19093
      SCHEMA_REGISTRY_LISTENERS: 'http://0.0.0.0:8081'
      SCHEMA_REGISTRY_HOST_NAME: 'schema-registry'
      SCHEMA_REGISTRY_KAFKASTORE_SSL_KEY_PASSWORD: confluent
      SCHEMA_REGISTRY_KAFKASTORE_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafka.consumer.keystore.jks
      SCHEMA_REGISTRY_KAFKASTORE_SSL_KEYSTORE_PASSWORD: confluent
      SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.consumer.truststore.jks
      SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_PASSWORD: confluent
      SCHEMA_REGISTRY_KAFKASTORE_TOPIC: _schemas
      SCHEMA_REGISTRY_KAFKASTORE_TOPIC_REPLICATION_FACTOR: 3
      SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: SSL
      SCHEMA_REGISTRY_KAFKASTORE_SSL_KEYSTORE_TYPE: JKS
    volumes:
      - ${KAFKA_SSL_SECRETS_DIR}/consumer:/etc/kafka/secrets
    networks:
      - kafka-cluster-network

  mqtt:
      image: toke/mosquitto
      container_name: mqtt
      hostname: mqtt
      ports:
        - 1883:1883
      restart: unless-stopped
      networks:
      - kafka-cluster-network
  
  db:
    container_name: db
    hostname: db
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes: 
      - ${KAFKA_SSL_SECRETS_DIR}/db:/var/lib/postgresql/data
    networks:
      - kafka-cluster-network
  
  pgadmin:
    container_name: pgadmin
    hostname: pgadmin
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"
    networks:
      - kafka-cluster-network
    
  datascience-notebook:
    image: jupyter/datascience-notebook
    container_name: datascience-notebook-container
    volumes:
      - /home/q/Desktop/kafka-security-ssl-sasl/secrets/jupyter-notebooks:/home/jovyan/work
    ports:
      - 8888:8888
    volumes:
      - ${KAFKA_SSL_SECRETS_DIR}:/etc/kafka/secrets
    networks:
      - kafka-cluster-network

networks:
  kafka-cluster-network:
    driver: bridge
    name: kafka-cluster-network
